# Service
# external-dns annotation will update DNS (cloudflare)
# with correct A NAME mapping to public IP address
# selector: defines which deployment the service points at
apiVersion: v1
kind: Service
metadata:
  name: network-map-dev
  namespace: network-map-service
  labels:
    app: network-map-dev
  annotations:
    external-dns.alpha.kubernetes.io/hostname: network-map-dev.cordite.biz
spec:
  selector:
    app: network-map-dev
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443
---
## Persistent Volume
# will create a new azure share each time it is created
# can be mounted to many containers
# uses Storage Class above
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: network-map-dev
  namespace: network-map-service
  labels:
    app: network-map-dev
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi
---
# Deployment
# Creates the replicated container and manages lifecycle
# TLS certs mounted
# Persistent Volume mounted
# Service points to this deployment (uses labels!)
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: network-map-dev
  namespace: network-map-service
  labels:
    app: network-map-dev
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: network-map-dev
    spec:
      containers:
        - name: network-map-service
          image: registry.gitlab.com/cordite/network-map-service/network-map-service:latest
          env:
            - name: NMS_PORT
              value: "443"
            - name: NMS_DB
              value: "/mnt/cordite/network-map/db"
            - name: NMS_USERNAME
              value: "admin"
            - name: NMS_PASSWORD
              value: "7twe3nqgdx5rjyfz"
          ports:
            - containerPort: 443
          volumeMounts:
            - name: volume
              mountPath: "/mnt/cordite/network-map/db"
      imagePullSecrets:
        - name: nms-registry
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: network-map-dev
# ---
# TLS certificate request
# cert-manager will request signed certificate from CA (let's encrypt)
# stored as secretName
# domain will be commonName, dnsNames and domains
#apiVersion: certmanager.k8s.io/v1alpha1
#kind: Certificate
#metadata:
#  name: cordite-biz
#  namespace: network-map-service
#  labels:
#    app: network-map-dev
#spec:
#  secretName: network-map-dev-cordite-biz
#  issuerRef:
#    name: letsencrypt-staging
#    kind: ClusterIssuer
#  commonName: network-map-dev.cordite.biz
#  dnsNames:
#  - network-map-dev.cordite.biz
#  acme:
#    config:
#    - dns01:
#        provider: cloudflare-cordite-biz
#      domains:
#      - network-map-dev.cordite.biz
